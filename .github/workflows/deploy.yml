name: CI/CD Pipeline

on:
  push:
    branches:
      - main # main 브랜치에 푸시될 때 트리거됩니다.
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20" # 프로젝트에 맞는 Node.js 버전

      - name: Install dependencies
        run: npm install

      - name: Run tests
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install

      - name: Deploy to Elastic Beanstalk
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "ap-northeast-2" # AWS 리전
          APPLICATION_NAME: "coollaafi" # Elastic Beanstalk 애플리케이션 이름
          ENVIRONMENT_NAME: "Coollaafi-env" # Elastic Beanstalk 환경 이름
        run: |
          npm run build  # 필요시 빌드 명령어 추가
          zip -r deploy.zip *  # 파일 압축
          aws elasticbeanstalk create-application-version --application-name $APPLICATION_NAME --version-label $GITHUB_SHA --source-bundle S3Bucket=$AWS_S3_BUCKET,S3Key=deploy.zip
          aws elasticbeanstalk update-environment --environment-name $ENVIRONMENT_NAME --version-label $GITHUB_SHA
